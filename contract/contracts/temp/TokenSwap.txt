// pragma solidity ^0.5.6;

// import "hardhat/console.sol";
// import "../contracts/token/KIP7/KIP7.sol";
// import "./MusicStoneToken.sol";

// contract TokenSwap {
//     IKIP7 public token1;
//     address public owner1;
//     uint public amount1;
//     IKIP7 public token2;
//     address public owner2;
//     uint public amount2;

//     constructor(
//         address _token1,
//         address _owner1,
//         uint _amount1,
//         address _token2,
//         address _owner2,
//         uint _amount2
//     ) public {
//         token1 = IKIP7(_token1);
//         owner1 = _owner1;
//         amount1 = _amount1;
//         token2 = IKIP7(_token2);
//         owner2 = _owner2;
//         amount2 = _amount2;
//     }

//     function swap() public {
//         require(msg.sender == owner1 || msg.sender == owner2, "Not authorized");
//         require(token1.allowance(owner1, address(this)) >= amount1,"Token 1 allowance too low");
//         require(token2.allowance(owner2, address(this)) >= amount2,"Token 2 allowance too low");

//         _safeTransferFrom(token1, owner1, owner2, amount1);
//         _safeTransferFrom(token2, owner2, owner1, amount2);
//     }

//     function _safeTransferFrom(
//         IKIP7 token,
//         address sender,
//         address recipient,
//         uint amount
//     ) private {
//         bool sent = token.transferFrom(sender, recipient, amount);
//         require(sent, "Token transfer failed");
//     }
// }
